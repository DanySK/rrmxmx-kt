name: CI/CD Process
on:
  workflow_call:
  workflow_dispatch:

jobs:
  check-secrets:
    runs-on: ubuntu-24.04
    outputs:
      run-with-secrets: ${{ steps.require-secrets.outputs.run-with-secrets }}
    steps:
      - name: Find if secrets are available
        id: detect-secrets
        uses: DanySK/are-secrets-available@1.0.0
        with:
          secrets: ${{ toJson(secrets) }}
      - name: Set condition
        id: require-secrets
        run: |
          echo "run-with-secrets=${{ steps.detect-secrets.outputs.has-secrets == 'true' && !github.event.repository.fork }}" >> $GITHUB_OUTPUT

  staging-repo:
    runs-on: ubuntu-24.04
    needs:
      - check-secrets
    if: needs.check-secrets.outputs.run-with-secrets == 'true'
    outputs:
      maven-central-repo-id: ${{ steps.create-staging-repo.outputs.staging-repo-id }}
      next-version: ${{ steps.compute-next-version.outputs.next-version }}
      will-release: ${{ steps.compute-next-version.outputs.will-release }}
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0
      - name: Compute next release version
        id: compute-next-version
        uses: nicolasfara/precompute-semantic-release-version-action@2.0.2
        with:
          github-token: ${{ github.token }}
      - id: create-staging-repo
        name: Create a staging repository
        uses: danysk/action-create-ossrh-staging-repo@1.1.0
        with:
          group-id: "org.danilopianini"
          maven-central-username: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          maven-central-password: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          repo-description: "rrmxmx-kt ${{ steps.compute-next-version.outputs.next-version }}"

  build:
    needs:
      - check-secrets
      - staging-repo
    if: always() && !contains(needs.staging-repo.result, 'failure')
    strategy:
      fail-fast: false
      matrix:
        os: [ windows-2022, macos-14, ubuntu-24.04 ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: DanySK/action-checkout@0.2.22
      - uses: DanySK/build-check-deploy-gradle-action@3.7.6
        with:
          # Dry-deployment
          deploy-command: |
            NEXT_VERSION="${{ needs.staging-repo.outputs.next-version }}"
            OVERRIDE_VERSION=$([[ "$NEXT_VERSION" != "" ]] && echo "-PforceVersion=$(echo $NEXT_VERSION)" || echo "")
            ./gradlew $OVERRIDE_VERSION -PstagingRepositoryId=${{ needs.staging-repo.outputs.maven-central-repo-id }} uploadAll --parallel
          should-run-codecov: ${{ runner.os == 'Linux' }}
          should-deploy: ${{ needs.check-secrets.outputs.run-with-secrets == 'true' }}
          codecov-token: ${{ secrets.CODECOV_TOKEN }}
          maven-central-username: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          maven-central-password: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          signing-key: ${{ secrets.SIGNING_KEY }}
          signing-password: ${{ secrets.SIGNING_PASSWORD }}

  close-staging-repos:
    needs:
      - staging-repo
      - build
    runs-on: ubuntu-24.04
    if: needs.check-secrets.outputs.run-with-secrets == 'true'
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4.2.2
      - uses: DanySK/build-check-deploy-gradle-action@3.7.6
        with:
          maven-central-username: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          maven-central-password: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          should-run-codecov: false
          should-deploy: true
          build-command: true
          check-command: true
          deploy-command: |
            ./gradlew -PstagingRepositoryId=${{ needs.staging-repo.outputs.maven-central-repo-id }} close --parallel
            if [[ "${{ needs.staging-repo.outputs.will-release }}" == "false" ]]; then
              ./gradlew -PstagingRepositoryId=${{ needs.staging-repo.outputs.maven-central-repo-id }} dropStagingRepositoryOnMavenCentral
            fi
  release:
    needs:
      - check-secrets
      - staging-repo
      - build
      - close-staging-repos
    runs-on: ubuntu-24.04
    if: needs.check-secrets.outputs.run-with-secrets == 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
        with:
          token: ${{ secrets.DEPLOYMENT_TOKEN }}
      - name: Find the version of Node from package.json
        id: node-version
        run: echo "version=$(jq -r .engines.node package.json)" >> $GITHUB_OUTPUT
      - name: Install Node
        uses: actions/setup-node@v4.2.0
        with:
          node-version: ${{ steps.node-version.outputs.version }}
      - uses: DanySK/build-check-deploy-gradle-action@3.7.6
        env:
          STAGING_REPO_ID: ${{ needs.staging-repo.outputs.maven-central-repo-id }}
        with:
          build-command: true
          check-command: true
          deploy-command: |
            npm install
            npx semantic-release
          should-run-codecov: false
          should-deploy: true
          github-token: ${{ github.token }}
          maven-central-username: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          maven-central-password: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          npm-token: ${{ secrets.NPM_TOKEN }}
          signing-key: ${{ secrets.SIGNING_KEY }}
          signing-password: ${{ secrets.SIGNING_PASSWORD }}
  success:
    runs-on: ubuntu-24.04
    needs:
      - check-secrets
      - staging-repo
      - close-staging-repos
      - release
      - build
    if: >-
      always() && (
        contains(join(needs.*.result, ','), 'failure')
        || !contains(join(needs.*.result, ','), 'cancelled')
      )
    steps:
      - name: Verify that there were no failures
        run: ${{ !contains(join(needs.*.result, ','), 'failure') }}

  drop-staging-repos:
    needs:
      - staging-repo
      - release
    runs-on: ubuntu-24.04
    if: always() && !(contains(needs.staging-repo.result, 'failure') || contains(needs.staging-repo.result, 'cancelled'))
    steps:
      - name: Drop staging repository
        uses: danysk/action-drop-ossrh-staging-repo@1.0.3
        with:
          repo-id: ${{ needs.staging-repo.outputs.maven-central-repo-id }}
          maven-central-username: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          maven-central-password: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
